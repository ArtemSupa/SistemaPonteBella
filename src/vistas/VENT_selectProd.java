/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controlador.Metodos;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Producto;
import modelo.VentaMercaderiaDetalle;


/**
 *
 * @author ArtemSupa
 */
public class VENT_selectProd extends javax.swing.JFrame {

    
    /**
     * Creates new form COMP_selectProd
     */
    public VENT_selectProd() {
        initComponents();
        LlenaGrilla();
        
    }
    
public void LlenaGrilla(){
    
    DefaultTableModel modeloLista = new DefaultTableModel()
        {
            @Override
            public boolean isCellEditable(int row, int col)
            {
                return false;
            }
        };
      
        ArrayList<Object> Nombrecolumna = new ArrayList<Object>();
        Nombrecolumna.add("Id");
        Nombrecolumna.add("Nombre");
        Nombrecolumna.add("Valor compra");
        Nombrecolumna.add("Valor venta");
        Nombrecolumna.add("Stock");
        Nombrecolumna.add("Categoria");
        Nombrecolumna.add("Estado");
        for (Object column :Nombrecolumna){
            modeloLista.addColumn(column);
        }
        this.tbl_productos.setModel(modeloLista);


        
        Metodos met = new Metodos();
        ArrayList<Producto> listProducto = new ArrayList<Producto>();
        
        //listProducto = met.ListarDatosProductocompletoconCondicion();
        listProducto = met.ListarDatosProductocompletoconCondicion();
        
        
        
        Producto prod = new Producto();
        Iterator<Producto> intProducto = listProducto.iterator();
        while(intProducto.hasNext()){
            
            Producto elemento=intProducto.next();
            String resulCate = met.ObtenerNombreCategoria(elemento.getIdCategoriaProd());
            
            Object[] vi = new Object[]{elemento.getCodigoProd(),elemento.getNombreProd(),elemento.getValorCompraProd(),elemento.getValorVentaProd(),elemento.getStockProd(),resulCate,elemento.getEstadoProd()};
            
            modeloLista.addRow(vi);
            
        }    
        
        this.tbl_productos.setModel(modeloLista);
    
    
    
    }     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rSPanelMaterial1 = new RSMaterialComponent.RSPanelMaterial();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_productos = new RSMaterialComponent.RSTableMetroCustom();
        rSButtonMaterialIconOne1 = new RSMaterialComponent.RSButtonMaterialIconOne();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        rSPanelMaterial1.setBackground(new java.awt.Color(218, 114, 114));
        rSPanelMaterial1.setShadowBottom(false);
        rSPanelMaterial1.setShadowLeft(false);
        rSPanelMaterial1.setShadowRight(false);
        rSPanelMaterial1.setShadowTop(false);

        tbl_productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbl_productos.setBackgoundHead(new java.awt.Color(247, 100, 175));
        tbl_productos.setBackgoundHover(new java.awt.Color(247, 100, 175));
        tbl_productos.setColorPrimaryText(new java.awt.Color(0, 0, 0));
        tbl_productos.setColorSecundaryText(new java.awt.Color(0, 0, 0));
        tbl_productos.setSelectionBackground(new java.awt.Color(255, 0, 51));
        tbl_productos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_productosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_productos);

        rSButtonMaterialIconOne1.setBackground(new java.awt.Color(214, 170, 170));
        rSButtonMaterialIconOne1.setText("Cancelar");
        rSButtonMaterialIconOne1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rSButtonMaterialIconOne1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        rSButtonMaterialIconOne1.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.CANCEL);
        rSButtonMaterialIconOne1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonMaterialIconOne1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rSPanelMaterial1Layout = new javax.swing.GroupLayout(rSPanelMaterial1);
        rSPanelMaterial1.setLayout(rSPanelMaterial1Layout);
        rSPanelMaterial1Layout.setHorizontalGroup(
            rSPanelMaterial1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rSPanelMaterial1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(rSPanelMaterial1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1003, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rSButtonMaterialIconOne1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        rSPanelMaterial1Layout.setVerticalGroup(
            rSPanelMaterial1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rSPanelMaterial1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rSButtonMaterialIconOne1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rSPanelMaterial1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rSPanelMaterial1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rSButtonMaterialIconOne1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonMaterialIconOne1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_rSButtonMaterialIconOne1ActionPerformed

    private void tbl_productosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_productosMouseClicked
       if(evt.getClickCount()==2){
            
            String NombreProdG="";
            Boolean resultado = false;
            DefaultTableModel tablaPro =(DefaultTableModel) VENT_ingeVent.tbl_venta.getModel();
            
           
            
           
            int seleccionar= tbl_productos.rowAtPoint(evt.getPoint());
            String CodigoProd = String.valueOf(tbl_productos.getValueAt(seleccionar, 0));
            String PrecioProd = String.valueOf(tbl_productos.getValueAt(seleccionar, 3));
            String NombreProd = String.valueOf(tbl_productos.getValueAt(seleccionar, 1));
            
            ArrayList<String> codigos = new ArrayList();
            for(int i = 0 ; i < tablaPro.getRowCount();i++){
                NombreProdG = (String) tablaPro.getValueAt(i,1);
                
                codigos.add(NombreProdG);

            }
            
            int tamañoArray = codigos.size();
            String resultados="";
            for(int x=0;x<tamañoArray;x++){
                resultados = codigos.get(x);
                if(resultados.equals(CodigoProd)){
                    resultado=true;
                    break;
                }
           
            }
            
            if(resultado==true){
                JOptionPane.showMessageDialog(rootPane,"Producto ya seleccionado anteriormente");
            }else{
            
            
            String CantidadProd = JOptionPane.showInputDialog("Ingrese la cantidad a vender");
            
            
            
            
            if(CantidadProd==null){
            }else{
                CantidadProd = (String)CantidadProd;
                if(CantidadProd.isEmpty()==false){
                    if(CantidadProd.trim().equals("")){
                        JOptionPane.showMessageDialog(rootPane,"Debe ingresar una cantidad valida");
                    }else{
                        
                        Pattern p = Pattern.compile("[A-Z,a-z,&%$#@!()*^]");
                        Matcher m = p.matcher(CantidadProd);
                        if (m.find()) {
                            JOptionPane.showMessageDialog(null, "Porfavor Ingrese solo numeros");
                        }else{
                            if(Integer.parseInt(CantidadProd)>0){
                            Metodos met = new Metodos();
                            VentaMercaderiaDetalle objIngresoDet = new VentaMercaderiaDetalle();
                            objIngresoDet.setProdCodigo(CodigoProd);
                            int Stock = met.TraerStock(objIngresoDet);
                            int CantidadDelprod = Integer.parseInt(CantidadProd);
                            if(CantidadDelprod>Stock){
                                JOptionPane.showMessageDialog(null, "La cantidad supera el stock actual del producto.   "
                                        + "Stock: "+Stock);
                                
                            }else{
                                
                                
                                
                                
                            VentaMercaderiaDetalle ingMerDet = new VentaMercaderiaDetalle();
                            ingMerDet.setDetaCantidad(Integer.parseInt(CantidadProd));
                            ingMerDet.setProdCodigo(CodigoProd);
                            ingMerDet.setDetaPrecio(Integer.parseInt(PrecioProd));
                            
                            
                            
                            Object[] vi = new Object[]{NombreProd,CodigoProd,CantidadProd,PrecioProd};
                            VENT_ingeVent.modeloLista2.addRow(vi);
                            String precioCompra="";
                            String Cantidad="";
                            
                            for(int i = 0 ; i < VENT_ingeVent.modeloLista2.getRowCount();i++){
        
                                Cantidad = (String) VENT_ingeVent.modeloLista2.getValueAt(i,2);
                                precioCompra = (String) VENT_ingeVent.modeloLista2.getValueAt(i,3);
                                
                               
                            }
                            int subtotalNum1 = Integer.parseInt(Cantidad);
                            int subtotalNum2 = Integer.parseInt(precioCompra);
                            

                            String TraerValorTXT = VENT_ingeVent.txt_subtotalV.getText();
                            int ValorTXT = Integer.parseInt(TraerValorTXT);
                            int SubtotalFinal = ValorTXT+(subtotalNum1*subtotalNum2);
                            
                            String SubtotalFinalS = String.valueOf(SubtotalFinal);
                            VENT_ingeVent.txt_subtotalV.setText(SubtotalFinalS);
                            String ValorDescuento = VENT_ingeVent.txt_descuentoV.getText();
                            int ValorDesc = Integer.parseInt(ValorDescuento);
                            int ValorFinalDesc = SubtotalFinal-ValorDesc;
                            String delivery = VENT_ingeVent.txt_delivery.getText();
                            int Del = Integer.parseInt(delivery);
                            int calcal= ValorFinalDesc+Del;
                            String TotalFinal = String.valueOf(calcal);
                            VENT_ingeVent.txt_totalV.setText(TotalFinal);
                            
                            this.dispose();
                            }    
                                
                                
                            
                            }else{
                                JOptionPane.showMessageDialog(rootPane,"Debe ingresar un valor mayor a 0");
                            }
                        }
                        
                        
                    }
                    
                    
                    
                
                }else{
                    System.out.println("Error");
                    JOptionPane.showMessageDialog(rootPane,"Debe ingresar una cantidad valida");
                    
                }
                
                
            }
           
            }
            
        }
    }//GEN-LAST:event_tbl_productosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VENT_selectProd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VENT_selectProd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VENT_selectProd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VENT_selectProd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VENT_selectProd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private RSMaterialComponent.RSButtonMaterialIconOne rSButtonMaterialIconOne1;
    private RSMaterialComponent.RSPanelMaterial rSPanelMaterial1;
    private RSMaterialComponent.RSTableMetroCustom tbl_productos;
    // End of variables declaration//GEN-END:variables
}
